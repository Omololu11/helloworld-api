name: Deploy to Cloud Run

on:
  push:
    branches:
      - deploy-to-cloudrun  # Trigger the workflow on pushes to the 'deploy-to-cloud-run' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Check out the repository code

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # Set up JDK 17 using the Temurin distribution
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package  # Build the project using Maven, producing the JAR file

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # Set up Docker Buildx for multi-platform builds

      - name: Log in to Google Container Registry
        uses: google-github-actions/auth@v1  # Authenticate to Google Cloud using a service account key
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}  # Use the GCP service account key stored in secrets

      - name: Configure Docker for Google Container Registry
        run: gcloud auth configure-docker  # Configure Docker to use Google Container Registry

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-world .  # Build the Docker image
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-world  # Push the Docker image to Google Container Registry

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy hello-world \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/hello-world \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated  # Deploy the Docker image to Google Cloud Run
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}  # Use the GCP project ID storedinsecrets